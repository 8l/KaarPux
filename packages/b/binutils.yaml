package:
  name: binutils
  version: 2.25.1
  www: http://www.gnu.org/software/binutils/
  short: |
      The GNU Binutils are a collection of binary tools:
      ld (GNU linker)
      as (GNU assembler).


lfs:
  - http://www.linuxfromscratch.org/lfs/view/development/chapter05/binutils-pass1.html
  - http://www.linuxfromscratch.org/lfs/view/development/chapter05/binutils-pass2.html
  - http://www.linuxfromscratch.org/lfs/view/development/chapter06/binutils.html

download:
  gnu: ~
  checksum: b5b14added7d78a8d1ca70b5cb75fef57ce2197264f4f5835326b0df22ac9f22
  verify: sig

version: 
  installed_sh_trailing: ld -V
  wiz_sourceware: binutils-gdb
  changelog: binutils/NEWS

# ============================================================

bootstrap_1:

  - echo: "configure"
  - sh: >
      ../${KX_BINUTILS}/configure
        --prefix="${KX_TOOLS}"
        --with-sysroot="${KX_MNT}"
        --with-lib-path="${KX_TOOLS}/lib"
        --target="${KX_TARGET}"
        --disable-nls
        --disable-werror
        --disable-lto
        --disable-bootstrap
        --disable-dependency-tracking

  - make: ~

  - sh: |
      case $(uname -m) in
        x86_64) mkdir -v "${KX_TOOLS}/lib" && ln -sv lib "${KX_TOOLS}/lib64" ;;
      esac

  - install: ~

# ============================================================

bootstrap_2:

  - separate_builddir: ~

  - echo: "configure"
  - sh: >
      CC="${KX_TARGET}-gcc"
      AR="${KX_TARGET}-ar"
      RANLIB="${KX_TARGET}-ranlib"
      ../${KX_BINUTILS}/configure
         --prefix=${KX_TOOLS}
         --disable-nls
         --with-lib-path=${KX_TOOLS}/lib
         --disable-dependency-tracking
         --disable-werror
         --disable-lto
         --disable-bootstrap
         --with-sysroot

  - make: ~

  - sh: |
      case $(uname -m) in
        x86_64) mkdir -v "${KX_TOOLS}/lib" && ln -sv lib "${KX_TOOLS}/lib64" ;;
      esac

  - install: ~

  - echo: "post-install"
  - sh: |
      make -C ld clean
      make -C ld LIB_PATH=/lib
      cp -v ld/ld-new ${KX_TOOLS}/bin

# ============================================================

bootstrap_5:

  - todo: Check PTY's

  - echo: "patching"

  - sh: |
      # Suppress the installation of an outdated standards.info file as a newer one is installed later on in the Autoconf instructions: 
      rm -fv etc/standards.info
      sed -i.bak '/^INFO/s/standards.info //' etc/Makefile.in

  - sh: |

      # Test case fails. We do not seem to be alone:
      # http://sourceware.org/bugzilla/show_bug.cgi?id=14763
      # http://sourceware.org/bugzilla/show_bug.cgi?id=14675

      sed '/exception_static_test/d' -i gold/testsuite/Makefile.am
      sed '/exception_static_test/d' -i gold/testsuite/Makefile.in

  - separate_builddir: ~

  - echo: configure
  - sh: >
      ../${KX_BINUTILS}/configure
        --prefix=''
        --enable-shared
        --enable-ld=default
        --enable-gold
        --enable-plugins
        --enable-threads
        --disable-werror
        --enable-lto
        --disable-bootstrap
        --disable-dependency-tracking

  - make: tooldir=/

  - check: -j1

  - install: tooldir=/

      # TODO: ArchLinux installs more files; should we?
      # https://projects.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/binutils

# ============================================================


verify_cli: |

  # binaries are validated in "validate_toolchain",
  # so we only do a few basic tests here

  kx_cli_match_success "/bin/nm --version" { Binutils }
  kx_cli_match_success "/bin/nm /lib/libbfd.so" { aout bfd }

  kx_cli_match_success "/bin/objdump --version" { Binutils }
  kx_cli_match_success "/bin/objdump /lib/libbfd.so --disassemble" { mov retq }

  kx_cli_match_success "/bin/readelf --version" { Binutils }
  kx_cli_match_success "/bin/readelf /lib/libbfd.so --all" { Header Magic Section }

  kx_cli_match_success "/bin/size --version" { Binutils }
  kx_cli_match_success "/bin/size /lib/libbfd.so" { text data bss dec hex filename libbfd.so }

  kx_cli_match_success "/bin/strings --version" { Binutils }
  kx_cli_match_success "/bin/strings /lib/libbfd.so" { elf_ }

  # libbfd libiberty libopcodes are validated in "validate_toolchain"

